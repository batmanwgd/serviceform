# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-05-06 16:36
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import serviceform.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('visible_id', models.CharField(blank=True, db_index=True, max_length=5, verbose_name='Visible id')),
                ('multiple_choices_allowed', models.BooleanField(default=True, verbose_name='Multiple choices allowed?')),
            ],
            options={
                'verbose_name': 'Activity',
                'verbose_name_plural': 'Activities',
            },
            bases=(serviceform.models.SubitemMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ActivityChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('visible_id', models.CharField(blank=True, db_index=True, max_length=5, verbose_name='Visible id')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serviceform.Activity')),
            ],
            options={
                'verbose_name': 'Activity choice',
                'verbose_name_plural': 'Activity choices',
            },
        ),
        migrations.CreateModel(
            name='Level1Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('visible_id', models.CharField(blank=True, db_index=True, max_length=5, verbose_name='Visible id')),
            ],
            options={
                'verbose_name': 'Level 1 category',
                'verbose_name_plural': 'Level 1 categories',
            },
            bases=(serviceform.models.SubitemMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Level2Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('visible_id', models.CharField(blank=True, db_index=True, max_length=5, verbose_name='Visible id')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='serviceform.Level1Category', verbose_name='Level 1 category')),
            ],
            options={
                'verbose_name': 'Level 2 category',
                'verbose_name_plural': 'Level 2 categories',
            },
            bases=(serviceform.models.SubitemMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forenames', models.CharField(max_length=64, verbose_name='Forenames')),
                ('surname', models.CharField(max_length=64, verbose_name='Surname')),
                ('street_address', models.CharField(max_length=128, verbose_name='Street address')),
                ('postal_code', models.CharField(max_length=32, verbose_name='Postal code')),
                ('city', models.CharField(max_length=32, verbose_name='City')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone_number', models.CharField(max_length=32, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone number')),
                ('status', models.CharField(choices=[('ongoing', 'ongoing'), ('finished', 'finished')], default='ongoing', max_length=16)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Participant',
                'verbose_name_plural': 'Participants',
            },
        ),
        migrations.CreateModel(
            name='ParticipationActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_info', models.CharField(blank=True, max_length=1024, null=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serviceform.Activity')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serviceform.Participant')),
            ],
        ),
        migrations.CreateModel(
            name='ParticipationActivityChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_info', models.CharField(blank=True, max_length=1024, null=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices_set', to='serviceform.ParticipationActivity')),
                ('activity_choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serviceform.ActivityChoice')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visible_id', models.CharField(blank=True, db_index=True, max_length=5, verbose_name='Visible id')),
                ('question', models.CharField(max_length=1024, verbose_name='Question')),
                ('answer_type', models.CharField(choices=[('integer', 'Integer'), ('short_text', 'Short text'), ('long_text', 'Long text'), ('boolean', 'Boolean'), ('date', 'Date')], default='short_text', max_length=16, verbose_name='Answer type')),
                ('required', models.BooleanField(default=False, verbose_name='Answer required?')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
            },
        ),
        migrations.CreateModel(
            name='QuestionAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=1024)),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serviceform.Participant')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serviceform.Question')),
            ],
        ),
        migrations.CreateModel(
            name='ResponsibilityPerson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forenames', models.CharField(max_length=64, verbose_name='Forenames')),
                ('surname', models.CharField(max_length=64, verbose_name='Surname')),
                ('street_address', models.CharField(blank=True, max_length=128, verbose_name='Street address')),
                ('postal_code', models.CharField(blank=True, max_length=32, verbose_name='Postal code')),
                ('city', models.CharField(blank=True, max_length=32, verbose_name='City')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('phone_number', models.CharField(blank=True, max_length=32, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone number')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Responsibility person',
                'verbose_name_plural': 'Responsibility persons',
            },
        ),
        migrations.CreateModel(
            name='ServiceForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('valid_from', models.DateField(default=django.utils.timezone.now, verbose_name='Valid from')),
                ('valid_to', models.DateField(default=datetime.datetime(3000, 1, 1, 0, 0), verbose_name='Valid to')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('password', models.CharField(blank=True, default='', help_text='Password that is asked from participants', max_length=32)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('send_email_to_form_responsible', models.BooleanField(default=False, help_text='Send email to responsible person whenever a participant fills and sends a form', verbose_name='Send email to form responsibility person?')),
                ('send_email_to_activity_responsible', models.BooleanField(default=False, help_text='Send email to responsible person whenever a participant fills and sends a form', verbose_name='Send email to activity responsible person?')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('responsible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='serviceform.ResponsibilityPerson', verbose_name='Responsible')),
            ],
            options={
                'verbose_name': 'Service form',
            },
            bases=(serviceform.models.SubitemMixin, models.Model),
        ),
        migrations.AddField(
            model_name='question',
            name='form',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serviceform.ServiceForm'),
        ),
        migrations.AddField(
            model_name='participant',
            name='form',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serviceform.ServiceForm'),
        ),
        migrations.AddField(
            model_name='level2category',
            name='responsible',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='serviceform.ResponsibilityPerson', verbose_name='Responsible person'),
        ),
        migrations.AddField(
            model_name='level1category',
            name='form',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serviceform.ServiceForm'),
        ),
        migrations.AddField(
            model_name='level1category',
            name='responsible',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='serviceform.ResponsibilityPerson', verbose_name='Responsible person'),
        ),
        migrations.AddField(
            model_name='activitychoice',
            name='responsible',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='serviceform.ResponsibilityPerson', verbose_name='Responsible person'),
        ),
        migrations.AddField(
            model_name='activity',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serviceform.Level2Category', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='activity',
            name='responsible',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='serviceform.ResponsibilityPerson', verbose_name='Responsible person'),
        ),
        migrations.AlterUniqueTogether(
            name='participationactivitychoice',
            unique_together=set([('activity', 'activity_choice')]),
        ),
        migrations.AlterUniqueTogether(
            name='participationactivity',
            unique_together=set([('participant', 'activity')]),
        ),
    ]
